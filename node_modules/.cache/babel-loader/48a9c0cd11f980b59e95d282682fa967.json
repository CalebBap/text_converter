{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caleb\\\\Google Drive\\\\MSA\\\\notes_converter\\\\notes_converter_app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport MetaTags from 'react-meta-tags';\nimport './components/stylesheet.css';\nimport WebcamComponent from './components/webcamComponent';\nimport AboutComponent from './components/aboutComponent';\nimport DisplayText from './components/displayText';\nimport MenuComponent from './components/menuComponent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.webcamCallBack = detectedText => {\n      if (this.scannedText == \"Open the menu to scan and add some text...\" || this.scannedText == \"\") {\n        this.scannedText = detectedText;\n      } else {\n        this.scannedText = detectedText;\n      }\n    };\n\n    this.changeScreen = screenNum => {\n      this.screen = screenNum;\n      this.forceUpdate();\n    };\n\n    this.getScreen = () => {\n      return this.screen;\n    };\n\n    this.screen = 0;\n    this.scannedText = \"Open the menu to scan and add some text...\";\n    this.returnedScannedText = \"\";\n  }\n\n  render() {\n    const screen = this.getScreen();\n\n    if (screen === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(MetaTags, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1, maximum-scale=1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"View Text - Notes Converter\")), React.createElement(DisplayText, {\n        scannedTextFromApp: this.scannedText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(MenuComponent, {\n        ref: this.menu_ref,\n        changeScreen: this.changeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    } else if (screen === 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(MetaTags, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1, maximum-scale=1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Scan Text - Notes Converter\")), React.createElement(MenuComponent, {\n        ref: this.menu_ref,\n        changeScreen: this.changeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"webcamContainer\",\n        visibility: \"visible\",\n        returnScannedText: this.returnedScannedText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(WebcamComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    } else if (screen === 2) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(MetaTags, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1, maximum-scale=1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"About - Notes Converter\")), React.createElement(MenuComponent, {\n        ref: this.menu_ref,\n        changeScreen: this.changeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(AboutComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\caleb\\Google Drive\\MSA\\notes_converter\\notes_converter_app\\src\\App.js"],"names":["React","Component","MetaTags","WebcamComponent","AboutComponent","DisplayText","MenuComponent","App","constructor","props","webcamCallBack","detectedText","scannedText","changeScreen","screenNum","screen","forceUpdate","getScreen","returnedScannedText","render","menu_ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,6BAAP;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAExBO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,cARmB,GAQDC,YAAD,IAAkB;AAC/B,UAAI,KAAKC,WAAL,IAAoB,4CAApB,IAAoE,KAAKA,WAAL,IAAoB,EAA5F,EAAgG;AAC5F,aAAKA,WAAL,GAAmBD,YAAnB;AACH,OAFD,MAGK;AACD,aAAKC,WAAL,GAAmBD,YAAnB;AACH;AACJ,KAfkB;;AAAA,SAiBnBE,YAjBmB,GAiBHC,SAAD,IAAe;AAC1B,WAAKC,MAAL,GAAcD,SAAd;AACA,WAAKE,WAAL;AACH,KApBkB;;AAAA,SAsBnBC,SAtBmB,GAsBP,MAAM;AACd,aAAO,KAAKF,MAAZ;AACH,KAxBkB;;AAEf,SAAKA,MAAL,GAAc,CAAd;AAEA,SAAKH,WAAL,GAAmB,4CAAnB;AACA,SAAKM,mBAAL,GAA2B,EAA3B;AACH;;AAoBDC,EAAAA,MAAM,GAAG;AACL,UAAMJ,MAAM,GAAG,KAAKE,SAAL,EAAf;;AAEA,QAAIF,MAAM,KAAK,CAAf,EAAkB;AACd,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,sDAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,CADJ,EAKI,oBAAC,WAAD;AAAa,QAAA,kBAAkB,EAAE,KAAKH,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKQ,QAAzB;AAAmC,QAAA,YAAY,EAAE,KAAKP,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAUH,KAXD,MAYK,IAAIE,MAAM,KAAK,CAAf,EAAkB;AACnB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,sDAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,CADJ,EAKI,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKK,QAAzB;AAAmC,QAAA,YAAY,EAAE,KAAKP,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,UAAU,EAAC,SAA5C;AAAsD,QAAA,iBAAiB,EAAE,KAAKK,mBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CANJ,CADJ;AAYH,KAbI,MAcA,IAAIH,MAAM,KAAK,CAAf,EAAkB;AACnB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,sDAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,CADJ,EAKI,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKK,QAAzB;AAAmC,QAAA,YAAY,EAAE,KAAKP,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAUH;AACJ;;AArEuB;;AAwE5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport './components/stylesheet.css';\r\nimport WebcamComponent from './components/webcamComponent'\r\nimport AboutComponent from './components/aboutComponent'\r\nimport DisplayText from './components/displayText'\r\nimport MenuComponent from './components/menuComponent'\r\n\r\nclass App extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.screen = 0;\r\n\r\n        this.scannedText = \"Open the menu to scan and add some text...\";\r\n        this.returnedScannedText = \"\";\r\n    }\r\n\r\n    webcamCallBack = (detectedText) => {\r\n        if (this.scannedText == \"Open the menu to scan and add some text...\" || this.scannedText == \"\") {\r\n            this.scannedText = detectedText;\r\n        }\r\n        else {\r\n            this.scannedText = detectedText;\r\n        }\r\n    }\r\n\r\n    changeScreen = (screenNum) => {\r\n        this.screen = screenNum;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    getScreen = () => {\r\n        return this.screen;\r\n    }\r\n\r\n    render() {\r\n        const screen = this.getScreen();\r\n\r\n        if (screen === 0) {\r\n            return (\r\n                <div >\r\n                    <MetaTags>\r\n                        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\r\n                        <title>View Text - Notes Converter</title>\r\n                    </MetaTags>\r\n                    <DisplayText scannedTextFromApp={this.scannedText}/>\r\n                    <MenuComponent ref={this.menu_ref} changeScreen={this.changeScreen} />\r\n                </div >\r\n            );\r\n        }\r\n        else if (screen === 1) {\r\n            return (\r\n                <div >\r\n                    <MetaTags>\r\n                        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\r\n                        <title>Scan Text - Notes Converter</title>\r\n                    </MetaTags>\r\n                    <MenuComponent ref={this.menu_ref} changeScreen={this.changeScreen} />\r\n                    <div className=\"webcamContainer\" visibility=\"visible\" returnScannedText={this.returnedScannedText}>\r\n                        <WebcamComponent />\r\n                    </div>\r\n                </div >\r\n            );\r\n        }\r\n        else if (screen === 2) {\r\n            return (\r\n                <div>\r\n                    <MetaTags>\r\n                        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\r\n                        <title>About - Notes Converter</title>\r\n                    </MetaTags>\r\n                    <MenuComponent ref={this.menu_ref} changeScreen={this.changeScreen} />\r\n                    <AboutComponent />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}