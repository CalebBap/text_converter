{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caleb\\\\Google Drive\\\\MSA\\\\notes_converter\\\\notes_converter_app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './components/stylesheet.css';\nimport WebcamComponent from './components/webcamComponent';\nimport DisplayText from './components/displayText';\nimport hamButton from './hamButton.png';\nimport crossButton from './crossButton.png';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeScreen = () => {\n      switch (this.screen) {\n        case 0:\n          this.screen += 1;\n          break;\n\n        case 1:\n          this.screen -= 1;\n          break;\n      }\n\n      this.showHamButton();\n      this.forceUpdate();\n    };\n\n    this.getScreen = () => {\n      return this.screen;\n    };\n\n    this.getMenuState = () => {\n      console.log(this.menuState);\n      return this.menuState;\n    };\n\n    this.showHamButton = () => {\n      const hamNode = this.ham_button_ref.current;\n      const menuNode = this.menu_ref.current;\n      hamNode.style.visibility = \"visible\";\n      menuNode.style.visibility = \"hidden\";\n      this.forceUpdate();\n    };\n\n    this.showMenu = () => {\n      const hamNode = this.ham_button_ref.current;\n      const menuNode = this.menu_ref.current;\n      hamNode.style.visibility = \"hidden\";\n      menuNode.style.visibility = \"visible\";\n      this.forceUpdate();\n    };\n\n    this.setText = () => {};\n\n    this.screen = 0;\n    this.ham_button_ref = React.createRef();\n    this.cross_button_ref = React.createRef();\n    this.menu_ref = React.createRef();\n    this.text = \"Open the menu to add some text...\";\n  }\n\n  render() {\n    const screen = this.getScreen();\n    const menuState = this.getMenuState();\n\n    if (screen == 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(DisplayText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        ref: this.ham_button_ref,\n        className: \"hamImage\",\n        src: hamButton,\n        onClick: this.showMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        ref: this.menu_ref,\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        ref: this.cross_button_ref,\n        className: \"crossImage\",\n        src: crossButton,\n        onClick: this.showHamButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"menuText\",\n        id: \"menuOne\",\n        onClick: this.changeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Scan Text\"), React.createElement(\"p\", {\n        className: \"menuText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"View Text\"), React.createElement(\"p\", {\n        className: \"menuText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Clear Text\")));\n    }\n\n    if (screen == 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(WebcamComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        ref: this.ham_button_ref,\n        className: \"hamImage\",\n        src: hamButton,\n        onClick: this.showMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        ref: this.menu_ref,\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        ref: this.cross_button_ref,\n        className: \"crossImage\",\n        src: crossButton,\n        onClick: this.showHamButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"menuText\",\n        id: \"menuOne\",\n        onClick: this.changeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Scan Text\"), React.createElement(\"p\", {\n        className: \"menuText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"View Text\"), React.createElement(\"p\", {\n        className: \"menuText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Clear Text\")));\n    }\n\n    if (menuState) {\n      {\n        this.showMenu();\n      }\n      ;\n    } else {\n      {\n        this.showHamButton();\n      }\n      ;\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\caleb\\Google Drive\\MSA\\notes_converter\\notes_converter_app\\src\\App.js"],"names":["React","Component","WebcamComponent","DisplayText","hamButton","crossButton","App","constructor","props","changeScreen","screen","showHamButton","forceUpdate","getScreen","getMenuState","console","log","menuState","hamNode","ham_button_ref","current","menuNode","menu_ref","style","visibility","showMenu","setText","createRef","cross_button_ref","text","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './components/stylesheet.css';\r\nimport WebcamComponent from './components/webcamComponent'\r\nimport DisplayText from './components/displayText'\r\nimport hamButton from './hamButton.png';\r\nimport crossButton from './crossButton.png';\r\n\r\nclass App extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.screen = 0;\r\n        this.ham_button_ref = React.createRef();\r\n        this.cross_button_ref = React.createRef();\r\n        this.menu_ref = React.createRef();\r\n        this.text = \"Open the menu to add some text...\"\r\n    }\r\n\r\n    changeScreen = () => {\r\n        switch (this.screen) {\r\n            case 0:\r\n                this.screen += 1;\r\n                break\r\n            case 1:\r\n                this.screen -= 1;\r\n                break\r\n        }\r\n        this.showHamButton();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    getScreen = () => {\r\n        return this.screen;\r\n    }\r\n\r\n    getMenuState = () => {\r\n        console.log(this.menuState);\r\n        return this.menuState;\r\n    }\r\n\r\n    showHamButton = () => {\r\n        const hamNode = this.ham_button_ref.current;\r\n        const menuNode = this.menu_ref.current;\r\n        hamNode.style.visibility = \"visible\";\r\n        menuNode.style.visibility = \"hidden\";\r\n        this.forceUpdate();\r\n    }\r\n\r\n    showMenu = () => {\r\n        const hamNode = this.ham_button_ref.current;\r\n        const menuNode = this.menu_ref.current;\r\n        hamNode.style.visibility = \"hidden\";\r\n        menuNode.style.visibility = \"visible\";\r\n        this.forceUpdate();\r\n    }\r\n\r\n    setText = () => {\r\n        \r\n    }\r\n\r\n    render() {\r\n        const screen = this.getScreen();\r\n        const menuState = this.getMenuState();\r\n\r\n        if (screen == 0) {\r\n            return (\r\n                <div >\r\n                    <DisplayText /> \r\n                    <img ref={this.ham_button_ref} className=\"hamImage\" src={hamButton} onClick={this.showMenu} />\r\n                    <div ref={this.menu_ref} className=\"menu\">\r\n                        <img ref={this.cross_button_ref} className=\"crossImage\" src={crossButton} onClick={this.showHamButton} />\r\n                        <p className=\"menuText\" id=\"menuOne\" onClick={this.changeScreen}>Scan Text</p>\r\n                        <p className=\"menuText\">View Text</p>\r\n                        <p className=\"menuText\">Clear Text</p>\r\n                    </div>\r\n                </div >\r\n            );\r\n        }\r\n        if (screen == 1) {\r\n            return (\r\n                <div >\r\n                    <WebcamComponent />\r\n                    <img ref={this.ham_button_ref} className=\"hamImage\" src={hamButton} onClick={this.showMenu} />\r\n                    <div ref={this.menu_ref} className=\"menu\">\r\n                        <img ref={this.cross_button_ref} className=\"crossImage\" src={crossButton} onClick={this.showHamButton} />\r\n                        <p className=\"menuText\" id=\"menuOne\" onClick={this.changeScreen}>Scan Text</p>\r\n                        <p className=\"menuText\">View Text</p>\r\n                        <p className=\"menuText\">Clear Text</p>\r\n                    </div>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n        if (menuState) {\r\n            { this.showMenu() };\r\n        } else {\r\n            { this.showHamButton() };\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}