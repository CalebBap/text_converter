{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caleb\\\\Google Drive\\\\MSA\\\\notes_converter\\\\notes_converter_app\\\\src\\\\components\\\\displayText.js\";\nimport React from 'react';\n\nclass displayText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkText = () => {\n      const nodeText = this.text_ref.current;\n      console.log(\"Text Clicked\");\n      /*if (nodeText.textContent) {\r\n        }*/\n    };\n\n    this.lostFocus = () => {\n      const textNode = this.text_ref.current;\n      console.log(this.test);\n\n      if (this.text == null) {\n        textNode.style.visibility = \"hidden\";\n      }\n\n      this.forceUpdate();\n    };\n\n    this.text_ref = React.createRef();\n    this.text = \"\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      ref: this.text_ref,\n      className: \"mainText\",\n      onBlur: this.lostFocus,\n      onClick: this.checkText,\n      contentEditable: \"true\",\n      suppressContentEditableWarning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Open the menu to scan and add some text...\"));\n  }\n\n}\n\nexport default displayText;","map":{"version":3,"sources":["C:\\Users\\caleb\\Google Drive\\MSA\\notes_converter\\notes_converter_app\\src\\components\\displayText.js"],"names":["React","displayText","Component","constructor","props","checkText","nodeText","text_ref","current","console","log","lostFocus","textNode","test","text","style","visibility","forceUpdate","createRef","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,SANmB,GAMP,MAAM;AACd,YAAMC,QAAQ,GAAG,KAAKC,QAAL,CAAcC,OAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA;;AAGH,KAZkB;;AAAA,SAcnBC,SAdmB,GAcP,MAAM;AACd,YAAMC,QAAQ,GAAG,KAAKL,QAAL,CAAcC,OAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,IAAjB;;AACA,UAAI,KAAKC,IAAL,IAAa,IAAjB,EAAuB;AACnBF,QAAAA,QAAQ,CAACG,KAAT,CAAeC,UAAf,GAA4B,QAA5B;AACH;;AACD,WAAKC,WAAL;AACH,KArBkB;;AAEf,SAAKV,QAAL,GAAgBP,KAAK,CAACkB,SAAN,EAAhB;AACA,SAAKJ,IAAL,GAAY,EAAZ;AACH;;AAmBDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,GAAG,EAAE,KAAKZ,QAAb;AAAuB,MAAA,SAAS,EAAC,UAAjC;AAA4C,MAAA,MAAM,EAAE,KAAKI,SAAzD;AAAoE,MAAA,OAAO,EAAE,KAAKN,SAAlF;AAA6F,MAAA,eAAe,EAAC,MAA7G;AAAoH,MAAA,8BAA8B,EAAE,IAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADJ,CADJ;AAOH;;AAjCqC;;AAoC1C,eAAeJ,WAAf","sourcesContent":["import React from 'react';\r\n\r\nclass displayText extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.text_ref = React.createRef();\r\n        this.text = \"\";\r\n    }\r\n\r\n    checkText = () => {\r\n        const nodeText = this.text_ref.current;\r\n        console.log(\"Text Clicked\");\r\n        /*if (nodeText.textContent) {\r\n\r\n        }*/\r\n    }\r\n\r\n    lostFocus = () => {\r\n        const textNode = this.text_ref.current;\r\n        console.log(this.test);\r\n        if (this.text == null) {\r\n            textNode.style.visibility = \"hidden\";\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p ref={this.text_ref} className=\"mainText\" onBlur={this.lostFocus} onClick={this.checkText} contentEditable=\"true\" suppressContentEditableWarning={true}>\r\n                    Open the menu to scan and add some text...\r\n                </p>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default displayText"]},"metadata":{},"sourceType":"module"}