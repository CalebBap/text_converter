{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caleb\\\\Google Drive\\\\MSA\\\\notes_converter\\\\notes_converter_app\\\\src\\\\components\\\\displayText.js\";\nimport React from 'react';\n\nclass displayText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkText = () => {\n      const nodeText = this.text_ref.current;\n      /*if (nodeText.textContent) {\r\n        }*/\n    };\n\n    this.text_ref = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      ref: this.text_ref,\n      className: \"mainText\",\n      onClick: this.checkText,\n      contentEditable: \"true\",\n      suppressContentEditableWarning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"\\\"Open the menu to scan and add some text...\\\"\"));\n  }\n\n}\n\nexport default displayText;","map":{"version":3,"sources":["C:\\Users\\caleb\\Google Drive\\MSA\\notes_converter\\notes_converter_app\\src\\components\\displayText.js"],"names":["React","displayText","Component","constructor","props","checkText","nodeText","text_ref","current","createRef","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,SANmB,GAMP,MAAM;AACd,YAAMC,QAAQ,GAAG,KAAKC,QAAL,CAAcC,OAA/B;AACA;;AAGH,KAXkB;;AAEf,SAAKD,QAAL,GAAgBP,KAAK,CAACS,SAAN,EAAhB;AAEH;;AASDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,GAAG,EAAE,KAAKH,QAAb;AAAuB,MAAA,SAAS,EAAC,UAAjC;AAA4C,MAAA,OAAO,EAAE,KAAKF,SAA1D;AAAqE,MAAA,eAAe,EAAC,MAArF;AAA4F,MAAA,8BAA8B,EAAE,IAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADJ,CADJ;AAOH;;AAvBqC;;AA0B1C,eAAeJ,WAAf","sourcesContent":["import React from 'react';\r\n\r\nclass displayText extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.text_ref = React.createRef();\r\n        \r\n    }\r\n\r\n    checkText = () => {\r\n        const nodeText = this.text_ref.current;\r\n        /*if (nodeText.textContent) {\r\n\r\n        }*/\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p ref={this.text_ref} className=\"mainText\" onClick={this.checkText} contentEditable=\"true\" suppressContentEditableWarning={true}>\r\n                    \"Open the menu to scan and add some text...\"\r\n                </p>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default displayText"]},"metadata":{},"sourceType":"module"}